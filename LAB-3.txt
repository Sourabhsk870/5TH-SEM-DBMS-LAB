								1KS18CS097
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
								LAB PROG-3
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Consider the schema for Movie Database:

	ACTOR(ACT_ID,ACT_NAME,ACT_GENDER)				# ACT_ID : PRIMARY KEY
	DIRECTOR(DIR_ID,DIR_NAME,DIR_PHONE)				# DIR_ID : PRIMARY KEY
	MOVIES(MOV_ID,MOV_TITLE,MOV_YEAR,MOV_LANG,DIR_ID) 		#MOV_ID : PRIMARY KEY,DIR_ID : FOREIGN KEY
	MOVIE_CAST(ACT_ID,MOV_ID,ROLE)					#ACT_ID,MOV_ID : FOREIGN KEY
	RATING(MOV_ID,REV_STARS)					# MOV_ID : FOREIGN KEY

QUERRIES :
	
	1. List the titles of all movies directed by 'Hitchcock'.

	2. Find the movie names where one or more actors acted in two or more movies.

	3. List all the actors who acted in a movie before 2000 and also in a mobie after 2015(Use Join operation).

	4. Find the title of movies and number of stars for each movie that has at least one rating and find the highest number of stars that 
	    movie recieved. Sort the result by movie title.

	5. Update rating of all the movies directed by 'Steven Spielberg' to 5.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							SQL QUERRIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							TABLE CREATION
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> CREATE TABLE ACTOR(ACT_ID NUMBER(10) PRIMARY KEY,ACT_NAME VARCHAR2(20),ACT_GENDER VARCHAR2(10));

Table created.

SQL> CREATE TABLE DIRECTOR(DIR_ID NUMBER(10) PRIMARY KEY,DIR_NAME VARCHAR2(20),DIR_PHONE NUMBER(10));

Table created.

SQL> CREATE TABLE MOVIES(MOV_ID NUMBER(10) PRIMARY KEY,MOV_TITLE VARCHAR2(30),MOV_YEAR NUMBER(10),MOV_LANG VARCHAR2(10),DIR_ID NUMBER(10),FOREIGN KEY(DIR_ID) REFERENCES DIRECTOR);

Table created.

SQL> CREATE TABLE MOVIE_CAST(ACT_ID NUMBER(10),MOV_ID NUMBER(10),ROLE VARCHAR2(10),FOREIGN KEY(ACT_ID) REFERENCES ACTOR,FOREIGN KEY(MOV_ID) REFERENCES MOVIES);

Table created.

SQL> CREATE TABLE RATING(MOV_ID NUMBER(10),REV_STARS NUMBER(10),FOREIGN KEY(MOV_ID) REFERENCES MOVIES);

Table created.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							TABLE DESCRIPTION
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> DESC ACTOR
 Name                                      Null?  		  Type
 ----------------------------------------- -------- ----------------------------
 ACT_ID                                    NOT NULL 	NUMBER(10)
 ACT_NAME                                           	VARCHAR2(20)
 ACT_GENDER                                         	VARCHAR2(10)

SQL> DESC DIRECTOR
 Name                                      Null?   		 Type
 ----------------------------------------- -------- ----------------------------
 DIR_ID                                    NOT NULL 	NUMBER(10)
 DIR_NAME                                          	VARCHAR2(20)
 DIR_PHONE                                          	NUMBER(10)

SQL> DESC MOVIES
 Name                                      Null?   		 Type
 ----------------------------------------- -------- ----------------------------
 MOV_ID                                    NOT NULL 	NUMBER(10)
 MOV_TITLE                                         	 VARCHAR2(30)
 MOV_YEAR                                          	 NUMBER(10)
 MOV_LANG                                           	VARCHAR2(10)
 DIR_ID                                            		 NUMBER(10)

SQL> DESC MOVIE_CAST
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 ACT_ID                                             NUMBER(10)
 MOV_ID                                             NUMBER(10)
 ROLE                                                 VARCHAR2(10)

SQL> DESC RATING
 Name                                      Null?    Type
 ----------------------------------------- -------- ----------------------------
 MOV_ID  	                                NUMBER(10)
 REV_STARS                                          NUMBER(10)

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							INSERTING VALUES INTO TABLES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
								ACTOR TABLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> INSERT INTO ACTOR VALUES(301,'ANUSHKA','FEMALE');

1 row created.

SQL> INSERT INTO ACTOR VALUES(302,'PRABHAS','MALE');

1 row created.

SQL> INSERT INTO ACTOR VALUES(303,'PUNITH','MALE');

1 row created.

SQL> INSERT INTO ACTOR VALUES(304,'JERMY','MALE');

1 row created.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							DIRECTORY TABLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> INSERT INTO DIRECTOR VALUES(60,'RAJAMOULI',8751611001);

1 row created.

SQL> INSERT INTO DIRECTOR VALUES(61,'HITCHCOCK',7766138911);

1 row created.

SQL> INSERT INTO DIRECTOR VALUES(62,'FARAN',9986776531);

1 row created.

SQL> INSERT INTO DIRECTOR VALUES(63,'STEVEN SPIELBERG',8989776538);

1 row created.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							MOVIES TABLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> INSERT INTO MOVIES VALUES(1001,'BAHUBALI -2',2017,'TELUGU',60);

1 row created.

SQL> INSERT INTO MOVIES VALUES(1002,'BAHUBALI',2015,'TELUGU',60);

1 row created.

SQL> INSERT INTO MOVIES VALUES(1003,'AKASH',2008,'KANNADA',61);

1 row created.

SQL> INSERT INTO MOVIES VALUES(1004,'WAR HORSE',2011,'ENGLISH',63);

1 row created.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							MOVIE_CAST TABLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> INSERT INTO MOVIE_CAST VALUES(301,1002,'HEROINE');

1 row created.

SQL> INSERT INTO MOVIE_CAST VALUES(301,1001,'HEROINE');

1 row created.

SQL> INSERT INTO MOVIE_CAST VALUES(303,1003,'HERO');

1 row created.

SQL> INSERT INTO MOVIE_CAST VALUES(303,1002,'GUEST');

1 row created.

SQL> INSERT INTO MOVIE_CAST VALUES(304,1004,'HERO');

1 row created.

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							RATING TABLE
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> INSERT INTO RATING VALUES(1001,4);

1 row created.

SQL> INSERT INTO RATING VALUES(1002,2);

1 row created.

SQL> INSERT INTO RATING VALUES(1003,5);

1 row created.

SQL> INSERT INTO RATING VALUES(1004,4);

1 row created.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							VIEWING ALL CONTENTS
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

SQL> SELECT * FROM ACTOR;

    ACT_ID ACT_NAME             ACT_GENDER
---------- -------------------- ----------
       301 ANUSHKA              	  FEMALE
       302 PRABHAS            	  MALE
       303 PUNITH              	  MALE
       304 JERMY                	  MALE

SQL> SELECT * FROM DIRECTOR;

    DIR_ID DIR_NAME              DIR_PHONE
---------- -------------------- ----------
        60 RAJAMOULI                8751611001
        61 HITCHCOCK               7766138911
        62 FARAN                     	   9986776531
        63 STEVEN SPIELBERG     8989776538

SQL> SELECT * FROM MOVIES;

    MOV_ID MOV_TITLE                        MOV_YEAR MOV_LANG       DIR_ID
---------- ------------------------------ ---------- ---------- ----------
      1001 BAHUBALI -2                       2017 	  TELUGU              60
      1002 BAHUBALI                           2015 	  TELUGU              60
      1003 AKASH                                2008 	  KANNADA           61
      1004 WAR HORSE                        2011 	  ENGLISH            63

SQL> SELECT * FROM MOVIE_CAST;

    ACT_ID     MOV_ID ROLE
---------- ---------- ----------
       301       1002 HEROINE
       301       1001 HEROINE
       303       1003 HERO
       303       1002 GUEST
       304       1004 HERO

SQL> SELECT * FROM RATING;

    MOV_ID  REV_STARS
---------- ----------
      1001          4
      1002          2
      1003          5
      1004          4

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
							SOLUTION OF QUERRIES
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

1. List the titles of all movies directed by 'Hitchcock'.


SQL> SELECT MOV_TITLE FROM MOVIES M,DIRECTOR D WHERE D.DIR_ID = M.DIR_ID AND DIR_NAME = 'HITCHCOCK';

MOV_TITLE
------------------------------
AKASH


2. Find the movie names where one or more actors acted in two or more movies.

SQL> SELECT MOV_TITLE FROM MOVIES M,MOVIE_CAST C WHERE M.MOV_ID = C.MOV_ID AND ACT_ID IN (SELECT ACT_ID FROM MOVIE_CAST GROUP BY ACT_ID HAVING COUNT(ACT_ID) > 1) GROUP BY MOV_TITLE HAVING COUNT(*) > 1;

MOV_TITLE
------------------------------
BAHUBALI


3. List all the actors who acted in a movie before 2000 and also in a mobie after 2015(Use Join operation).


SQL> SELECT ACT_NAME,MOV_TITLE,MOV_YEAR FROM ACTOR A JOIN MOVIE_CAST C ON A.ACT_ID = C.ACT_ID JOIN MOVIES M ON C.MOV_ID = M.MOV_ID WHERE M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

ACT_NAME             MOV_TITLE                        MOV_YEAR
-------------------- ------------------------------ ----------
ANUSHKA              BAHUBALI -2                          2017

NOTE  :
	WITHOUT USING JOIN OPERATOR :


SQL> SELECT ACT_NAME,MOV_TITLE,MOV_YEAR FROM ACTOR A,MOVIES M,MOVIE_CAST C WHERE A.ACT_ID = C.ACT_ID AND M.MOV_ID = C.MOV_ID AND M.MOV_YEAR NOT BETWEEN 2000 AND 2015;

ACT_NAME             MOV_TITLE                        MOV_YEAR
-------------------- ------------------------------ ----------
ANUSHKA              BAHUBALI -2                          2017


4. Find the title of movies and number of stars for each movie that has at least one rating and find the highest number of stars that 
movie recieved. Sort the result by movie title.


SQL> SELECT MOV_TITLE,MAX(REV_STARS) FROM MOVIES INNER JOIN RATING USING (MOV_ID) GROUP BY MOV_TITLE HAVING MAX(REV_STARS) > 0 ORDER BY MOV_TITLE;

MOV_TITLE                      MAX(REV_STARS)
------------------------------ --------------
AKASH               	                        5
BAHUBALI              	         2
BAHUBALI -2                        	         4
WAR HORSE                         	         4


5. Update rating of all the movies directed by 'Steven Spielberg' to 5.

SQL> UPDATE RATING SET REV_STARS = 5 WHERE MOV_ID IN (SELECT R.MOV_ID FROM RATING R,MOVIES M,DIRECTOR D WHERE M.MOV_ID = R.MOV_ID AND (M.DIR_ID = D.DIR_ID AND DIR_NAME = 'STEVEN SPIELBERG'));

1 row updated.


SQL> SELECT * FROM RATING;

    MOV_ID  REV_STARS
---------- ----------
      1001          4
      1002          2
      1003          5
      1004          5

-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
								THE END
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------